{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","id","title","completed","classNames","type","onClick","TodoFilter","filterBy","setFilterBy","query","setQuery","setResponseFilter","responseFilter","onSubmit","event","preventDefault","value","onChange","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","setTodo","useState","selectedUser","setSelectedUser","useEffect","userId","href","name","App","setTodos","isLoaded","setIsLoaded","addData","a","getTodosFromServer","filterParams","input","toLowerCase","includes","filteredTodos","useMemo","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.724c0d7f.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  setSelectedTodo: (mewTodo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const { id, title, completed } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              key={id}\n              className={classNames(\n                { 'has-background-info-light': selectedTodo?.id === id },\n              )}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames(\n                    {\n                      'has-text-danger': !completed,\n                      'has-text-success': completed,\n                    },\n                  )}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setSelectedTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames(\n                      'far',\n                      { 'fa-eye-slash': selectedTodo?.id === id },\n                      { 'fa-eye': selectedTodo?.id !== id },\n                    )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { ChangeEvent } from 'react';\n\ntype Props = {\n  filterBy: string\n  setFilterBy: (str: string) => void,\n  query: string\n  setQuery: (str: string) => void,\n  setResponseFilter: (value: string) => void\n  responseFilter: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterBy,\n  setFilterBy,\n  query,\n  setQuery,\n  setResponseFilter,\n  responseFilter,\n}) => {\n  const handleResponsefilterParams = (event: ChangeEvent<HTMLInputElement>) => {\n    setResponseFilter(event.target.value);\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterBy}\n            onChange={event => (\n              setFilterBy(event.target.value)\n            )}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={responseFilter}\n          onChange={handleResponsefilterParams}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          )}\n\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo,\n  setTodo: (obj: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, setTodo }) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(setSelectedUser);\n  }, [todo]);\n\n  const handleClick = () => {\n    setTodo(null);\n    setSelectedUser(null);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {\n        !selectedUser\n          ? <Loader />\n          : (\n            <div className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                <div\n                  className=\"modal-card-title has-text-weight-medium\"\n                  data-cy=\"modal-header\"\n                >\n                  {`Todo #${todo?.id}`}\n                </div>\n\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  type=\"button\"\n                  className=\"delete\"\n                  data-cy=\"modal-close\"\n                  onClick={handleClick}\n                />\n              </header>\n\n              <div className=\"modal-card-body\">\n                <p className=\"block\" data-cy=\"modal-title\">\n                  {todo?.title}\n                </p>\n\n                <p className=\"block\" data-cy=\"modal-user\">\n                  {\n                    todo?.completed\n                      ? <strong className=\"has-text-success\">Done</strong>\n                      : <strong className=\"has-text-danger\">Planned</strong>\n                  }\n\n                  {' by '}\n\n                  <a href=\"mailto:Sincere@april.biz\">\n                    {selectedUser.name}\n                  </a>\n                </p>\n              </div>\n            </div>\n          )\n      }\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterBy, setFilterBy] = useState('all');\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [query, setQuery] = useState('');\n  const [responseFilter, setResponseFilter] = useState('');\n\n  const addData = async () => {\n    const getTodosFromServer = await getTodos();\n\n    setTodos(getTodosFromServer);\n    setIsLoaded(true);\n  };\n\n  useEffect(() => {\n    addData();\n  }, []);\n\n  const filterParams = (title: string, input: string) => {\n    return title.toLowerCase().includes(input.toLowerCase());\n  };\n\n  const filteredTodos = useMemo(() => {\n    switch (filterBy) {\n      case 'active':\n        return (todos.filter(({ title, completed }) => !completed && filterParams(title, responseFilter)));\n      case 'completed':\n        return (todos.filter(({ title, completed }) => completed && filterParams(title, responseFilter)));\n      default:\n        return (todos.filter(({ title }) => filterParams(title, responseFilter)));\n    }\n  }, [filterBy, todos, responseFilter]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterBy={filterBy}\n                setFilterBy={setFilterBy}\n                query={query}\n                setQuery={setQuery}\n                responseFilter={responseFilter}\n                setResponseFilter={setResponseFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                !isLoaded\n                  ? <Loader />\n                  : (\n                    <TodoList\n                      todos={filteredTodos}\n                      selectedTodo={selectedTodo}\n                      setSelectedTodo={setSelectedTodo}\n                    />\n                  )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo?.userId && (\n        <TodoModal\n          todo={selectedTodo}\n          setTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}